name: Infrastructure Setup

on:
  workflow_dispatch:
  push:
    paths:
      - 'infrastructure/**'
      - '.github/workflows/infrastructure.yml'
    branches:
      - main

env:
  NODE_VERSION: '20'

jobs:
  setup-infrastructure:
    name: Setup Cloudflare Infrastructure
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Create D1 Database
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler d1 create bird-prompts-db --experimental-backend || echo "Database might already exist"

      - name: Initialize D1 Database Schema
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler d1 execute bird-prompts-db --file=src/utils/schema.sql --remote

      - name: Create KV Namespaces
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler kv:namespace create PROMPTS_KV || echo "KV namespace might already exist"
          npx wrangler kv:namespace create PROMPTS_KV --preview || echo "Preview KV namespace might already exist"

      - name: Create Queues
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler queues create video-generation-queue || echo "Queue might already exist"
          npx wrangler queues create video-generation-dlq || echo "DLQ might already exist"

      - name: Output Infrastructure IDs
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          echo "Infrastructure created. Please update wrangler.toml with the following IDs:"
          echo "---"
          npx wrangler d1 list
          echo "---"
          npx wrangler kv:namespace list
          echo "---"
          npx wrangler queues list
          echo "---"
          echo "Update these values in wrangler.toml before deployment"