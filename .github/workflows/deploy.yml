name: Deploy

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

env:
  NODE_VERSION: '20'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: TypeScript check
        run: npx tsc --noEmit

      - name: Validate wrangler.toml
        run: npx wrangler deploy --dry-run

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    environment:
      name: production
      url: https://cute-bird-slop-machine.${{ secrets.CLOUDFLARE_ZONE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Deploy to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler deploy \
            --env production \
            --var GOOGLE_AI_API_KEY:${{ secrets.GOOGLE_AI_API_KEY }}

      - name: Create deployment annotation
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.repos.createDeployment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha,
              environment: 'production',
              auto_merge: false,
              required_contexts: [],
              description: 'Production deployment'
            });

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request'
    environment:
      name: preview-${{ github.event.pull_request.number }}
      url: https://preview-${{ github.event.pull_request.number }}.cute-bird-slop-machine.${{ secrets.CLOUDFLARE_ZONE }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Deploy Preview to Cloudflare Workers
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler deploy \
            --name cute-bird-slop-machine-pr-${{ github.event.pull_request.number }} \
            --var GOOGLE_AI_API_KEY:${{ secrets.GOOGLE_AI_API_KEY }} \
            --var ENVIRONMENT:preview

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const comment = `### 🐦 Preview Deployment Ready!

            Your changes have been deployed to:
            https://cute-bird-slop-machine-pr-${{ github.event.pull_request.number }}.${{ secrets.CLOUDFLARE_ZONE }}.workers.dev

            **API Endpoints:**
            - 🏥 Health: \`/health\`
            - 📝 Generate Prompts: \`POST /generate-prompts\`
            - 🎬 Generate Video: \`POST /generate-video\`
            - 📚 Get Prompts: \`GET /prompts\`
            - 🎥 Get Video: \`GET /videos/:id\`

            **Commit:** ${{ github.event.pull_request.head.sha }}
            `;

            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('Preview Deployment Ready')
            );

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: comment
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: comment
              });
            }

  cleanup-preview:
    name: Cleanup Preview Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: npm ci

      - name: Delete Preview Deployment
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        run: |
          npx wrangler delete \
            --name cute-bird-slop-machine-pr-${{ github.event.pull_request.number }} \
            --force || echo "Preview deployment might not exist"